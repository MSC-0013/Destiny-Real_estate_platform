import { jsPDF } from "jspdf";

const ConstructionPdf = (req, type = "Construction") => {
  const doc = new jsPDF("p", "pt", "a4");
  const pageWidth = doc.internal.pageSize.getWidth();
  const left = 40;
  const col1Width = 120; // Label column width
  const col2Width = pageWidth - left * 2 - col1Width - 20; // Value column width
  let y = 80;

  // Clean safe text
  const cleanText = (txt) =>
    txt ? String(txt).replace(/[^\x20-\x7E\n]/g, "") : "N/A";

  // Section Header
  const drawSection = (title, color = [52, 152, 219]) => {
    doc.setFillColor(color[0], color[1], color[2]);
    doc.rect(left, y, pageWidth - 2 * left, 28, "F");
    doc.setFontSize(13);
    doc.setTextColor(255, 255, 255);
    doc.setFont("helvetica", "bold");
    doc.text(cleanText(title), left + 10, y + 18);
    y += 40;
    doc.setTextColor(0, 0, 0);
  };

  // Add table row
  const addRow = (label, value) => {
    label = cleanText(label);
    value = cleanText(value);

    doc.setFontSize(11);

    // Label column
    doc.setFont("helvetica", "bold");
    doc.text(`${label}:`, left + 10, y);

    // Value column (wrapped)
    doc.setFont("helvetica", "normal");
    const text = doc.splitTextToSize(value, col2Width);
    doc.text(text, left + col1Width + 20, y);

    // Increase Y correctly based on wrapped text height
    y += text.length * 14 + 6; // row spacing
  };

  // Title Banner
  doc.setFillColor(41, 128, 185);
  doc.rect(0, 0, pageWidth, 60, "F");
  doc.setTextColor(255, 255, 255);
  doc.setFont("helvetica", "bold");
  doc.setFontSize(20);
  doc.text(
    cleanText(`${type} Request Report`),
    pageWidth / 2,
    35,
    { align: "center" }
  );
  doc.setTextColor(0, 0, 0);

  // --- Personal Info ---
  drawSection("üë§ Personal Information", [52, 152, 219]);
  addRow("Full Name", req.clientName);
  addRow("Email", req.email);
  addRow("Phone", req.phone);
  if (type === "Repair") addRow("City/State", req.city);

  // --- Project / Repair Details ---
  drawSection(type === "Construction" ? "üèó Project Details" : "üõ† Repair Details", [46, 204, 113]);
  if (type === "Construction") {
    addRow("Type", req.projectType);
    addRow("Location", req.location);
    addRow("Area", req.area ? `${req.area} sq. ft.` : "");
    addRow("Bedrooms", req.bedrooms);
    addRow("Bathrooms", req.bathrooms);
    addRow("Floors", req.floors);
  } else {
    addRow("Repair Title", req.repairTitle);
    addRow("Description", req.description);
    addRow("Address", req.address);
    addRow("Estimated Cost", req.estimatedCost || "N/A");
    addRow("Project Type", req.projectType);
    addRow("Urgency", req.urgency);
  }

  // --- Budget & Timeline ---
  if (type === "Construction") {
    drawSection("üí∞ Budget & Timeline", [230, 126, 34]);
    addRow("Budget", req.budget);
    addRow("Timeline", req.timeline);
  }

  // --- Special Requirements ---
  if (type === "Construction" && req.specialRequirements) {
    drawSection("üìå Special Requirements", [155, 89, 182]);
    addRow("Details", req.specialRequirements);
  }

  // --- Description ---
  if (req.description) {
    drawSection("üìù Description", [231, 76, 60]);
    addRow("Details", req.description);
  }

  // --- Location Details ---
  if (req.city || req.address) {
    drawSection("üìç Location Details", [39, 174, 96]);
    addRow("City/Area", req.city);
    addRow("Full Address", req.address);
  }

  // --- Status ---
  drawSection("‚úÖ Status", [52, 73, 94]);
  addRow("Current Status", req.status || "Pending");

  // Footer
  const footerY = doc.internal.pageSize.getHeight() - 40;
  doc.setDrawColor(200, 200, 200);
  doc.line(left, footerY, pageWidth - left, footerY);
  doc.setFontSize(10);
  doc.setFont("helvetica", "italic");
  doc.setTextColor(100, 100, 100);
  doc.text(
    cleanText("Generated by Admin System ‚Ä¢ Confidential"),
    pageWidth / 2,
    footerY + 20,
    { align: "center" }
  );

  // Save
  const fileName = `${
    req.clientName ? cleanText(req.clientName).replace(/\s/g, "_") : "request"
  }_${type}Request.pdf`;
  doc.save(fileName);
};

export { ConstructionPdf };
