import { jsPDF } from "jspdf";

const OrderPdf = (order: any) => {
  const doc = new jsPDF("p", "pt", "a4");
  const pageWidth = doc.internal.pageSize.getWidth();
  const left = 40;
  const col1Width = 120;
  const col2Width = pageWidth - left * 2 - col1Width - 20;
  let y = 80;

  // Clean text for ASCII only
  const cleanText = (txt: any) =>
    txt ? String(txt).replace(/[^\x20-\x7E\n]/g, "") : "N/A";

  const drawSection = (title: string, color: [number, number, number] = [52, 152, 219]) => {
    doc.setFillColor(...color);
    doc.rect(left, y, pageWidth - 2 * left, 28, "F");
    doc.setFontSize(13);
    doc.setTextColor(255, 255, 255);
    doc.setFont("helvetica", "bold");
    doc.text(cleanText(title), left + 10, y + 18);
    y += 40;
    doc.setTextColor(0, 0, 0);
  };

  const addRow = (label: string, value: any) => {
    label = cleanText(label);
    value = cleanText(value);

    doc.setFontSize(11);
    doc.setDrawColor(220, 220, 220);
    doc.line(left, y + 4, pageWidth - left, y + 4);

    doc.setFont("helvetica", "bold");
    doc.text(`${label}:`, left + 10, y);

    doc.setFont("helvetica", "normal");
    const text = doc.splitTextToSize(value, col2Width);
    doc.text(text, left + col1Width + 20, y);

    y += text.length * 14 + 12;
  };

  // Title Banner (ASCII only)
  doc.setFillColor(41, 128, 185);
  doc.rect(0, 0, pageWidth, 60, "F");
  doc.setTextColor(255, 255, 255);
  doc.setFont("helvetica", "bold");
  doc.setFontSize(20);
  doc.text("Order Report", pageWidth / 2, 35, { align: "center" });
  doc.setTextColor(0, 0, 0);

  // Buyer & Seller Info
  drawSection("Buyer & Seller Information", [52, 152, 219]);
  addRow("Buyer ID", order.buyerId);
  addRow("Seller ID", order.sellerId);
  addRow("Property", order.property?.title || "N/A");
  addRow("Type", order.type);
  addRow("Buyer Name", order.buyerName || "N/A");
  addRow("Seller Name", order.sellerName || "N/A");
  addRow("Buyer Email", order.buyerEmail || "N/A");
  addRow("Seller Email", order.sellerEmail || "N/A");

  // Order Details
  drawSection("Order Details", [46, 204, 113]);
  addRow("Order ID", order.id);
  addRow("Amount", `$${order.amount}`);
  addRow("Status", order.status);
  if (order.startDate) addRow("Start Date", new Date(order.startDate).toLocaleString());
  if (order.endDate) addRow("End Date", new Date(order.endDate).toLocaleString());
  if (order.duration) addRow("Duration", order.duration);
  addRow("Created At", new Date(order.createdAt).toLocaleString());
  if (order.paymentMethod) addRow("Payment Method", order.paymentMethod);
  if (order.transactionId) addRow("Transaction ID", order.transactionId);

  // Address Details
  if (order.address || order.city || order.state) {
    drawSection("Address Details", [39, 174, 96]);
    addRow("City", order.city || "N/A");
    addRow("State", order.state || "N/A");
    addRow("Full Address", order.address || "N/A");
    if (order.zip) addRow("ZIP Code", order.zip);
  }

  // Special Notes
  if (order.notes) {
    drawSection("Special Notes", [231, 76, 60]);
    addRow("Notes", order.notes);
  }

  // Footer
  const footerY = doc.internal.pageSize.getHeight() - 40;
  doc.setDrawColor(200, 200, 200);
  doc.line(left, footerY, pageWidth - left, footerY);
  doc.setFontSize(10);
  doc.setFont("helvetica", "italic");
  doc.setTextColor(100, 100, 100);
  doc.text("Generated by Admin System - Confidential", pageWidth / 2, footerY + 20, { align: "center" });

  // Save PDF
  const fileName = `${order.buyerName ? cleanText(order.buyerName).replace(/\s/g, "_") : "order"}_Order.pdf`;
  doc.save(fileName);
};

export { OrderPdf };
