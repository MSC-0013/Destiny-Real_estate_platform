import { jsPDF } from "jspdf";

export const generateRepairPDF = (req) => {
  const doc = new jsPDF("p", "pt", "a4");
  let y = 90;
  const left = 50;
  const lineHeight = 18;
  const pageWidth = doc.internal.pageSize.getWidth();
  const contentWidth = pageWidth - left * 2;

  // ðŸ§¹ Clean safe text
  const cleanText = (txt) =>
    txt ? String(txt).replace(/[^\x20-\x7E\n]/g, "") : "N/A";

  // ðŸ›  Helper to safely add fields
  const addField = (label, value) => {
    if (value !== undefined && value !== null && value !== "") {
      label = cleanText(label);
      value = cleanText(value);

      doc.setFontSize(12);
      doc.setFont("helvetica", "bold");
      doc.text(`${label}:`, left, y);

      doc.setFont("helvetica", "normal");
      const text = doc.splitTextToSize(value, contentWidth - 150);
      doc.text(text, left + 150, y);

      y += text.length * lineHeight + 8; // Dynamic spacing
    }
  };

  // ðŸŽ¨ Section block with color header
  const addSection = (title, rgb) => {
    title = cleanText(title);
    doc.setFillColor(rgb[0], rgb[1], rgb[2]);
    doc.rect(left, y - 15, pageWidth - 2 * left, 25, "F"); // color background
    doc.setTextColor(255, 255, 255);
    doc.setFontSize(14);
    doc.setFont("helvetica", "bold");
    doc.text(title, left + 10, y + 3);

    y += 35;
    doc.setTextColor(0, 0, 0);
  };

  // ðŸŸ¦ Header bar
  doc.setFillColor(41, 128, 185);
  doc.rect(0, 0, pageWidth, 70, "F");
  doc.setTextColor(255, 255, 255);
  doc.setFontSize(22);
  doc.setFont("helvetica", "bold");
  doc.text(cleanText("Repair Request Report"), pageWidth / 2, 40, { align: "center" });
  doc.setTextColor(0, 0, 0);

  // ðŸ‘¤ Personal Information
  addSection("ðŸ‘¤ Personal Information", [52, 73, 94]);
  addField("Full Name", req.clientName || "N/A");
  addField("Email", req.email || "N/A");
  addField("Phone", req.phone || "N/A");
  addField("City/State", req.city || "N/A");

  // ðŸ›  Repair Details ..
  addSection("ðŸ›  Repair Details", [231, 76, 60]);
  addField("Repair Title", req.repairTitle || "N/A");
  addField("Description", req.description || "N/A");
  addField("Address", req.address || "N/A");
  addField("Estimated Cost", req.estimatedCost ? `â‚¹${req.estimatedCost}` : "N/A");
  addField("Project Type", req.projectType || "N/A");
  addField("Urgency", req.urgency || "N/A");

  // ðŸ“„ Documents
  addSection("ðŸ“„ Documents", [39, 174, 96]);
  addField("Attachment", req.documents || "No attachments");

  // âœ… Status
  addSection("âœ… Status", [155, 89, 182]);
  addField("Current Status", req.status ? req.status.toUpperCase() : "PENDING");

  // Footer
  const footerY = doc.internal.pageSize.getHeight() - 50;
  doc.setDrawColor(200, 200, 200);
  doc.line(left, footerY, pageWidth - left, footerY);
  doc.setFontSize(10);
  doc.setTextColor(100, 100, 100);
  doc.setFont("helvetica", "italic");
  doc.text(
    cleanText("Generated by Admin System â€¢ Confidential"),
    pageWidth / 2,
    footerY + 20,
    { align: "center" }
  );

  // Save
  const fileName = `${req.clientName ? cleanText(req.clientName).replace(/\s/g, "_") : "repair_request"}.pdf`;
  doc.save(fileName);
};

export default generateRepairPDF;
